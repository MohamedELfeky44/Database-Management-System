CREATE TABLE ROOT.COURSES
(
  COURSE_ID     NUMBER(10),
  COURSE_NAME   VARCHAR2(100 BYTE),
  COURSE_LEVEL  NUMBER(10),
  NO_OF_HOURS   NUMBER(10),
  CONSTRAINT PK_COURSES PRIMARY KEY (COURSE_ID)
);

CREATE TABLE ROOT.DEPARTMENTS
(
  DEPARTMNET_ID    NUMBER(8),
  DEPARTMENT_NAME  VARCHAR2(20 BYTE),
  CONSTRAINT PK_DEPARTMENTS PRIMARY KEY (DEPARTMNET_ID)
);

CREATE TABLE ROOT.STUDENTS
(
  STUDENT_ID     NUMBER(10),
  STUDENT_NAME   VARCHAR2(100 BYTE),
  STUDENT_LEVEL  NUMBER(10),
  PHONE_NO       NUMBER(10),
  ADDRESS        VARCHAR2(100 BYTE),
  AGE            NUMBER(10),
  CLASS_ID       NUMBER(10),
  GENDER         VARCHAR2(20 BYTE),
  DEPARTMENT_ID  NUMBER(8),
  CONSTRAINT PK_STUDENTS PRIMARY KEY (STUDENT_ID),
   CONSTRAINT DEPT_FK 
   FOREIGN KEY (DEPARTMENT_ID) 
   REFERENCES ROOT.DEPARTMENTS (DEPARTMNET_ID)
);

CREATE TABLE ROOT.DEPARTMENT_COURSES
(
  DEPARTMENT_ID  NUMBER(10),
  COURSE_ID      NUMBER(10),
  CONSTRAINT DEPT_COURSE_COM_PK
  PRIMARY KEY (DEPARTMENT_ID, COURSE_ID),
  CONSTRAINT DEPT_C_FK 
  FOREIGN KEY (DEPARTMENT_ID) 
  REFERENCES ROOT.DEPARTMENTS (DEPARTMNET_ID)
);

CREATE TABLE ROOT.STUDENT_COURSES
(
  STUDENT_ID       NUMBER(10),
  COURSE_ID        NUMBER(10),
  GRADE            NUMBER(4),
  DESCRIPTION      VARCHAR2(2 BYTE),
  ENROLLMENT_DATE  VARCHAR2(50 BYTE),
  CONSTRAINT GRADE_CHK
    CHECK (GRADE <= 100),
  CONSTRAINT COURSE_STUDENT_FK 
    FOREIGN KEY (COURSE_ID) 
    REFERENCES ROOT.COURSES (COURSE_ID),
  CONSTRAINT STUDENT_ID_FK 
    FOREIGN KEY (STUDENT_ID) 
    REFERENCES ROOT.STUDENTS (STUDENT_ID) 
)
